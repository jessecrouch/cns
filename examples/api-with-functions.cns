Story: BuildJsonResponse (function)
  Build a JSON response from status code and message
  
  Given:
    - StatusCode is available
    - Message is available
    - JsonResult becomes empty
    
  Step: Build JSON structure
    - JsonResult becomes '{"status": <StatusCode>, "message": "<Message>"}'
    
  End: Return JsonResult

---

Story: ValidateId (function)
  Validate that an ID is a positive number
  
  Given:
    - Id is available
    - IsValid becomes false
    
  Step: Check if ID is positive
    - IsValid becomes Id > 0
    
  End: Return IsValid

---

Story: GetUserById (function)
  Get user information by ID
  
  Given:
    - UserId is available
    - Response becomes empty
    
  Step: Check if user ID is valid
    - Valid becomes ValidateId(UserId)
    - If Valid is true:
      - Response becomes BuildJsonResponse(200, "User found: ID " + UserId)
    - If Valid is false:
      - Response becomes BuildJsonResponse(400, "Invalid user ID")
      
  End: Return Response

---

Story: CreateUser (function)
  Create a new user
  
  Given:
    - Username is available
    - Response becomes empty
    
  Step: Validate username
    - Length becomes Username length
    - If Length < 3:
      - Response becomes BuildJsonResponse(400, "Username too short")
    - If Length >= 3:
      - Response becomes BuildJsonResponse(201, "User created: " + Username)
      
  End: Return Response

---

Story: HandleApiRequest
  API server that handles user operations
  
  Given:
    - Server is a web server
    - Port is 8080
    
  Step: Define GET /user route
    - When GET /user:
      - Query becomes request query
      - UserId becomes Query["id"]
      - If UserId is empty:
        - Send BuildJsonResponse(400, "Missing user ID")
      - If UserId is not empty:
        - Send GetUserById(UserId)
        
  Step: Define POST /user route
    - When POST /user:
      - Body becomes request body
      - Username becomes Body["username"]
      - If Username is empty:
        - Send BuildJsonResponse(400, "Missing username")
      - If Username is not empty:
        - Send CreateUser(Username)
        
  Step: Define health check route
    - When GET /health:
      - Send BuildJsonResponse(200, "API is healthy")
      
  Step: Start the server
    - Server listens on Port
    - Show "API server running on port " + Port
    - Show "Routes: GET /user?id=N, POST /user, GET /health"
    
  End
