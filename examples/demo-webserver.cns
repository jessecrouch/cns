Story: Demo webserver serving HTML - runs until cancelled

Given:
  port: Integer = 8080
  max_connections: Integer = 999999
  connection_count: Integer = 0

Step 1 → Create server socket
  Because: Need to listen for incoming HTTP connections
  Effect: Create socket server_socket on port
  Effect: Print "✓ CNS Webserver started on port {port}"
  Effect: Print "✓ Open http://localhost:{port}/ in your browser"
  Effect: Print "✓ Press Ctrl+C to stop"

Step 2 → Accept incoming connection
  Because: Client is trying to connect
  Effect: Accept connection on server_socket

Step 3 → Read HTTP request from client
  Because: Need to know what the client is requesting
  Effect: Network read from client_stream into request_data

Step 4 → Send HTML response to client
  Because: Client expects an HTTP response with HTML content
  Effect: Send "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n<html><head><title>CNS Demo</title><style>body\{font-family:Arial;margin:40px;background:#667eea;color:#fff\}h1\{margin-top:0\}.box\{background:#fff;color:#333;padding:30px;border-radius:8px;box-shadow:0 4px 6px rgba(0,0,0,0.1)\}.highlight\{color:#764ba2;font-weight:bold\}</style></head><body><div class=\"box\"><h1>Welcome to CNS Webserver!</h1><p>This page is served by a <span class=\"highlight\">Causal Narrative Script</span> program.</p><p>CNS is a programming language optimized for LLMs with explicit causality and narrative flow.</p><hr><p><strong>Server Stats:</strong></p><p>Port: {port} | Connections: {connection_count}</p><p>Refresh to test persistence!</p></div></body></html>" to client

Step 5 → Close client connection
  Because: Request has been handled
  Effect: Close connection client_socket

Step 6 → Increment connection counter
  Because: Track how many connections served
  Then: connection_count becomes connection_count + 1
  Effect: Print "✓ Served request #{connection_count}"

Step 7 → Check if should continue
  Because: Server runs until user cancels
  If connection_count < max_connections
  Then: Repeat from Step 2
  Otherwise: Continue to End

End: Return "Server stopped after {connection_count} connections"
  Because: User cancelled or max connections reached
  Effect: Close socket server_socket
  Effect: Print "✓ Webserver stopped"
